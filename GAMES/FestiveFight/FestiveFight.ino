//Festive Fight
//	Version 1.1, December 20th, 2017
//	By Jonathan Holmes (crait)
//
//	Website: http://www.crait.net/
//	Twitter: @crait
//
//	Holiday mascots from throughout the calendar must fight in
//	order to compete for the affection of the children throughout
//	the world for some weird reason.
//
//	This game includes single and multiplayer support. To fight,
//	you have two options: Attack and Retreat. Each match, you have
//	5 hearts. Getting punched causes you to lose 1 heart. Lose
//	all your hearts, and you'll lose the match, so make sure you
//	retreat often to dodge oncoming attacks. Different characters
//	have different stats. Some are harder to use than others, so
//	try them all out!
//
//	This game was created for the second Arduboy Game Jam.
//
//	Fighters:			ATTACK	DEFENCE
//		Santa						9			3
//		Easter Bunny		5			7
//		Cupid						10		2
//		Turkey					7			5
//		GroundHog				8			4
//		Uncle Sam				6			6
//
//	1P Buttons:
//		Down - Attack
//		Left - Retreat
//	2P Buttons:
//		A - Attack
//		B - Retreat
//
//	1.1 - December 20, 2017
//		Added a 'Tie' screen
//		Fixed an issue where P1 was given frame advantage
//
//	1.0 - December 19, 2017
//		Initial release

#include <Arduboy2.h>
Arduboy2 arduboy;
#include <ESPboyPlaytune.h>
ESPboyPlaytune tunes(arduboy.audio.enabled);

#define NORMAL 0
#define FLIP 1

#define STANDING 0
#define PUNCHING 1
#define JUMPING 2
#define HURT 3

void drawBitmap(int16_t x, int16_t y, const uint8_t *bitmap, uint8_t w, uint8_t h,
	uint8_t color, uint8_t flip) {
	if (x+w < 0 || x > WIDTH-1 || y+h < 0 || y > HEIGHT-1)
		return;
	int yOffset = abs(y) % 8;
	int sRow = y / 8;
	if (y < 0) {
		sRow--;
		yOffset = 8 - yOffset;
	}
	int rows = h/8;
	if (h%8!=0) rows++;
	for (int a = 0; a < rows; a++) {
		int bRow = sRow + a;
		if (bRow > (HEIGHT/8)-1) break;
		if (bRow > -2) {
		for (int f = 0; f<w; f++) {
			int iCol;
			if(flip) {
				iCol = (w - 1) - f;
			} else {
				iCol = f;
			}
			if (iCol + x > (WIDTH-1)) break;
			if (iCol + x >= 0) {
			if (bRow >= 0) {
				if (color == WHITE)
				arduboy.sBuffer[(bRow*WIDTH) + x + f] |= pgm_read_byte(bitmap+(a*w)+iCol) << yOffset;
				else if (color == BLACK)
				arduboy.sBuffer[(bRow*WIDTH) + x + f] &= ~(pgm_read_byte(bitmap+(a*w)+iCol) << yOffset);
				else
				arduboy.sBuffer[(bRow*WIDTH) + x + f] ^= pgm_read_byte(bitmap+(a*w)+iCol) << yOffset;
			}
			if (yOffset && bRow<(HEIGHT/8)-1 && bRow > -2) {
				if (color == WHITE)
				arduboy.sBuffer[((bRow+1)*WIDTH) + x + f] |= pgm_read_byte(bitmap+(a*w)+iCol) >> (8-yOffset);
				else if (color == BLACK)
				arduboy.sBuffer[((bRow+1)*WIDTH) + x + f] &= ~(pgm_read_byte(bitmap+(a*w)+iCol) >> (8-yOffset));
				else
				arduboy.sBuffer[((bRow+1)*WIDTH) + x + f] ^= pgm_read_byte(bitmap+(a*w)+iCol) >> (8-yOffset);
			}
			}
		}
		}
	}
}

byte gamestate = 0;
byte p1 = 0;
byte p1s = 0;
byte p2s = 0;
byte p2 = 0;
byte h1 = 0;
byte h2 = 0;
byte p1x = 0;
byte p2x = 0;
byte p1y = 0;
byte p2y = 0;
byte p1c = 0;
byte p2c = 0;
byte p1v = 0;
byte p2v = 0;
byte players = 1;
byte playerselect = 1;
byte point = 0;
byte pointer = 0;
byte gameovertimer = 70;
byte intro = 0;
boolean casting = false;

byte snow[10][2] = {
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)},
	{random(128), random(34)}
};

const unsigned char winner[]  = {
	0x7c, 0xfc, 0xf8, 0xc0, 0x80, 0xe0, 0xe0, 0xe0, 0x00, 0xe0, 0xf8, 0xfc, 0x38, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0xf0, 0xe0, 0xc0, 0xfc, 0xfc, 0xfc, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0xf0, 0xe0, 0xc0, 0xfc, 0xfc, 0xfc, 0x00, 0xfc, 0xfc, 0xfc, 0xdc, 0xdc, 0x9c, 0x1c, 0x00, 0xfc, 0xfc, 0xfc, 0x9c, 0x9c, 0xfc, 0xf8, 0xf0, 0x00, 0x00, 0xfe, 0xfe, 0xfe, 0x00, 0x01, 0x0f, 0x1f, 0x1f, 0x0f, 0x03, 0x0f, 0x1f, 0x1f, 0x07, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x01, 0x03, 0x07, 0x1f, 0x1f, 0x0f, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x01, 0x03, 0x07, 0x1f, 0x1f, 0x0f, 0x00, 0x1f, 0x1f, 0x1f, 0x1d, 0x1d, 0x1c, 0x1c, 0x00, 0x1f, 0x1f, 0x1f, 0x07, 0x0f, 0x1f, 0x1f, 0x0d, 0x00, 0x00, 0x73, 0x77, 0x73
};

const unsigned char logo[]  = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0xf0, 0xf8, 0x1c, 0xc, 0xc, 0xc, 0x1c, 0xf8, 0xf0, 0xf8, 0xfc, 0xce, 0x86, 0x86, 0x86, 0xce, 0xfc, 0xf8, 0xe0, 0xc0, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0xff, 0xc3, 0x3, 0x1, 0x1, 0x1, 0x00, 0x30, 0x30, 0x30, 0x30, 0xfd, 0x1f, 0x7, 0x3, 0x3, 0x3, 0x21, 0x31, 0x1, 0x81, 0x83, 0x83, 0x8f, 0x7f, 0x21, 0x20, 0x20, 0x40, 0xc8, 0xcc, 0xc, 0x10, 0x11, 0x3f, 0xf8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0xff, 0x3, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf1, 0xc0, 0x00, 0x00, 0x1, 0xf, 0x1f, 0x7, 0x3, 0x3, 0x83, 0x43, 0x37, 0xf, 0xe, 0xe, 0x6, 0x86, 0x8e, 0xc, 0xc, 0x18, 0x38, 0xf0, 0xc0, 0x80, 0x00, 0x00, 0x7, 0x3f, 0xff, 0xff, 0xf0, 0xc0, 0x80, 0x80, 0x80, 0xc4, 0xfc, 0xfc, 0xff, 0x7f, 0xfc, 0xf8, 0xf0, 0xf0, 0xf0, 0xf1, 0xf1, 0x30, 0x98, 0x9c, 0x9f, 0x9f, 0x9c, 0x1c, 0x1c, 0x9c, 0x9c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9e, 0x9f, 0x9f, 0x9e, 0x1c, 0x1c, 0x1c, 0x9e, 0x1f, 0x1f, 0x1f, 0x9c, 0x1c, 0x1c, 0x9c, 0x9e, 0x9f, 0x9f, 0x9f, 0x9f, 0x38, 0x30, 0xf0, 0xf8, 0xfc, 0xfe, 0x7f, 0xff, 0xfc, 0xf0, 0xe0, 0xc0, 0xc0, 0xc0, 0xc4, 0xc8, 0xc8, 0xe8, 0xf8, 0xf8, 0xff, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x1, 0x3, 0x7, 0xf, 0xf, 0xf, 0xf, 0xf, 0x7, 0x3, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xff, 0x1b, 0xb, 0x1, 0x00, 0x7f, 0xff, 0xff, 0x00, 0x3e, 0x7f, 0xf3, 0xe3, 0xf3, 0x77, 0xf7, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x1c, 0xff, 0xff, 0x00, 0x3, 0x3, 0xff, 0xff, 0x3, 0x3, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1, 0x3, 0x3, 0x7, 0xf, 0xf, 0xf, 0xf, 0x7, 0x7, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf, 0x1f, 0x3f, 0x3f, 0x7e, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x3e, 0x3f, 0x1f, 0xf, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char select[]  = {
	0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f
};
const unsigned char op[]  = {
	0x00, 0x00, 0x00, 0x30, 0x38, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0x9c, 0x9c, 0xfc, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x0f, 0x0f, 0x0c, 0x0c, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00
};
const unsigned char opw[]  = {
	0x00, 0x00, 0x78, 0x4c, 0xc6, 0x02, 0x02, 0xfe, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x62, 0x62, 0x02, 0x06, 0x0c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x12, 0x13, 0x10, 0x10, 0x13, 0x12, 0x1e, 0x1f, 0x10, 0x10, 0x10, 0x1c, 0x04, 0x04, 0x06, 0x03, 0x01, 0x00, 0x00
};
const unsigned char tp[]  = {
	0x00, 0x00, 0x00, 0x18, 0x1c, 0x0c, 0x8c, 0x8c, 0xf8, 0x70, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0x9c, 0x9c, 0xfc, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x0f, 0x0f, 0x0d, 0x0d, 0x0c, 0x0c, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00
};
const unsigned char tpw[]  = {
	0x00, 0x00, 0x3c, 0xa6, 0xa2, 0xf2, 0x52, 0x72, 0x06, 0x8c, 0xf8, 0xfe, 0x02, 0x02, 0x02, 0x62, 0x62, 0x02, 0x06, 0x0c, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0x11, 0x10, 0x10, 0x12, 0x12, 0x13, 0x13, 0x1e, 0x1f, 0x10, 0x10, 0x10, 0x1c, 0x04, 0x04, 0x06, 0x03, 0x01, 0x00
};
const unsigned char s[]  = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0xf0, 0xf8, 0xfc, 0xfc, 0x00, 0xe0, 0x08, 0xf2, 0x04, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x0f, 0x0f, 0x00, 0x01, 0x04, 0x13, 0x08, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char sw[]  = {
	0x00, 0x00, 0x00, 0x00, 0xf0, 0x18, 0x08, 0x0c, 0x06, 0x02, 0x02, 0xfe, 0x1c, 0xf7, 0x0d, 0xfb, 0x06, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x04, 0x0c, 0x18, 0x10, 0x10, 0x1f, 0x0e, 0x3b, 0x2c, 0x37, 0x18, 0x0f, 0x00, 0x00, 0x00, 0x00
};
const unsigned char so[]  = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0xf0, 0xf8, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char sow[]  = {
	0x00, 0x00, 0x00, 0x00, 0xf0, 0x18, 0x08, 0x0c, 0x06, 0x02, 0x02, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x04, 0x0c, 0x18, 0x10, 0x10, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char me[]  = {
	0x45, 0x8a, 0x15, 0xaa, 0x15, 0xaa, 0xd5, 0x6a, 0x34, 0x28, 0x21, 0x32, 0x1d, 0x0a, 0x0c, 0x06, 0x03, 0x02, 0x07, 0x02, 0x23, 0x41, 0xa0, 0x41, 0x80, 0x40, 0x81, 0x40, 0x20, 0x80, 0x40, 0x80, 0x40, 0x20, 0x08, 0xc7, 0x7d, 0xa2, 0x55, 0xa2, 0x51, 0xa8, 0x15, 0x88, 0x44, 0xa2, 0x51, 0xaa, 0x54, 0xa8, 0x51, 0x82, 0x05, 0xff, 0x00, 0x00, 0x41, 0x80, 0x80, 0x00, 0x80, 0xe0, 0xf0, 0xf0, 0xf0, 0xf0, 0xe0, 0x60, 0x60, 0x60, 0x68, 0xed, 0xe4, 0xe3, 0xe0, 0xe0, 0x61, 0x72, 0xe1, 0x02, 0xe1, 0x32, 0x1a, 0xaf, 0x11, 0x88, 0x54, 0x8a, 0x45, 0x2a, 0x05, 0x92, 0x45, 0xa2, 0x41, 0xa0, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xbf, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xfe, 0xff, 0xff, 0xff, 0x1d, 0xec, 0x36, 0x37, 0xf7, 0xf7, 0xee, 0x1f, 0xff, 0x3f, 0xdf, 0x2e, 0x37, 0xf6, 0xee, 0x1c, 0x03, 0x7e, 0x55, 0xca, 0xc5, 0xa2, 0x51, 0xa8, 0x54, 0xaa, 0x55, 0x2a, 0x15, 0x8a, 0x45, 0x22, 0x51, 0xa2, 0x54, 0xa0, 0x55, 0xfe, 0xc3, 0xbc, 0x66, 0x40, 0x00, 0x38, 0xdf, 0x7f, 0xbf, 0xff, 0xff, 0xfe, 0x7d, 0x7d, 0x7d, 0xfd, 0xfe, 0x3f, 0x7f, 0xff, 0xf0, 0x6d, 0x1d, 0xbd, 0xfe, 0xff, 0xe0, 0x83, 0x3f, 0xc0, 0x7f, 0xa2, 0x55, 0xa2, 0x51, 0x28, 0x04, 0xa2, 0x51, 0xa8, 0x54, 0xaa, 0x11, 0xa2, 0x15, 0xa2, 0xc5, 0x6a, 0x45, 0x63, 0x41, 0x6b, 0x5e, 0x78, 0x71, 0xa6, 0x4b, 0x8d, 0x97, 0x9c, 0x38, 0x31, 0x23, 0x06, 0x46, 0x4d, 0x4d, 0x6d, 0x72, 0x7f, 0x6f, 0x1f, 0x37, 0x0f, 0x1d, 0xcb, 0xe0, 0x7f, 0x55, 0x6a, 0x45, 0x40, 0xc0, 0x8a, 0xc5, 0x6a, 0xb5, 0xda, 0xed, 0xca, 0x3d, 0xce, 0xf3, 0xfd, 0xfe, 0xf8, 0x87, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xbf, 0xbe, 0xbd, 0xdb, 0x57, 0xa7, 0xcf, 0xb7, 0x8b, 0xfa, 0xf6, 0x76, 0xa6, 0xca, 0x76, 0xea, 0x9c, 0x5f, 0xdf, 0xc0, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xb6, 0xb9, 0xfb, 0xf8, 0xf3, 0xf7, 0xff, 0xf8
};

#define SANTA 0
#define EASTERBUNNY 1
#define CUPID 2
#define TURKEY 3
#define GROUNDHOG 4
#define UNCLESAM 5

const byte stats[6][2] {
	{ 9, 3 },
	{ 5, 7 },
	{ 10, 2 },
	{ 7, 5 },
	{ 8, 4 },
	{ 6, 6 }
};

const byte forward = 5;
const byte back = 12;
const byte yoffset = 24;
const byte blow = 10;

//Standing: 30, 38
const unsigned char standing[6][2][150]  = {
	{
		//SANTA
		{
			//BLACK
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x20, 0x10, 0xc8, 0x24, 0x84, 0x44, 0x44, 0x44, 0x44, 0x48, 0x48, 0x50, 0x50, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x4e, 0x71, 0xb3, 0xb2, 0xaf, 0x7e, 0x8b, 0x12, 0x3f, 0x41, 0x85, 0x85, 0x55, 0xcd, 0x81, 0x9d, 0xf5, 0xff, 0x40, 0x20, 0x20, 0x40, 0x80, 0x00, 0x00, 0x3c, 0x42, 0x4f, 0x50, 0x60, 0xe0, 0xd0, 0x8f, 0x04, 0x03, 0x00, 0x00, 0x01, 0x02, 0x84, 0x88, 0x90, 0xb0, 0x90, 0x90, 0x88, 0xf4, 0x4f, 0x69, 0x37, 0x10, 0x08, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x3f, 0x07, 0x03, 0x03, 0x03, 0xc3, 0x33, 0x13, 0x33, 0xd3, 0x16, 0x14, 0x1c, 0x0c, 0x0b, 0x7d, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0f, 0x1f, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1e, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0c, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0f, 0x0e, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
		}, {
			//WHITE
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe0, 0x30, 0xd8, 0xec, 0x36, 0xda, 0x7a, 0xba, 0xba, 0xba, 0xba, 0xb6, 0xb4, 0xac, 0xa8, 0x98, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0xbf, 0xb1, 0x8e, 0x4c, 0x4d, 0x50, 0x81, 0x74, 0xed, 0xc0, 0xbe, 0x7a, 0x7a, 0xaa, 0x32, 0x7e, 0x62, 0x0a, 0x00, 0xbf, 0xd0, 0xd0, 0xb0, 0x60, 0xc0, 0x7e, 0xc3, 0xbd, 0xb0, 0xaf, 0x9f, 0x1f, 0x2f, 0x70, 0xfb, 0xfc, 0xff, 0xff, 0xfe, 0xfd, 0x7b, 0x77, 0x6f, 0x4f, 0x6f, 0x6f, 0x77, 0x0b, 0xb0, 0x96, 0xc8, 0x6f, 0x37, 0x18, 0x0f, 0x00, 0x80, 0x80, 0xc0, 0x60, 0xbf, 0xc0, 0xf8, 0xfc, 0xfc, 0xfc, 0x3c, 0xcc, 0x6c, 0xcc, 0x2c, 0xe9, 0xeb, 0xe3, 0xf3, 0xf4, 0x82, 0x38, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x19, 0x30, 0x20, 0x23, 0x23, 0x23, 0x23, 0x23, 0x21, 0x32, 0x1f, 0x01, 0x00, 0x0f, 0x18, 0x13, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x11, 0x13, 0x1e, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//EASTER BUNNY
		{
			//BLACK
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0c, 0xf4, 0xf8, 0xf0, 0xfc, 0x04, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x86, 0x79, 0x13, 0x03, 0x8b, 0x9a, 0x09, 0x23, 0xb2, 0x2a, 0x9c, 0xf8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0xa0, 0x60, 0x18, 0x06, 0x01, 0x31, 0x41, 0x9e, 0x87, 0x60, 0x18, 0x0f, 0x8b, 0x6a, 0x9b, 0x84, 0x63, 0x18, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x84, 0x48, 0x3f, 0x00, 0x80, 0x40, 0x30, 0x08, 0x08, 0x18, 0x24, 0xc0, 0x00, 0x1e, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x10, 0x14, 0x16, 0x15, 0x12, 0x12, 0x1c, 0x00, 0x00, 0x00, 0x0c, 0x0b, 0x08, 0x0a, 0x0b, 0x0a, 0x0a, 0x0a, 0x09, 0x09, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			//WHITE
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0e, 0xf2, 0x0a, 0x06, 0x0e, 0x02, 0xfa, 0x06, 0x0c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xce, 0x79, 0x86, 0xec, 0xfc, 0x74, 0x65, 0xf6, 0xdc, 0x4d, 0xd5, 0x63, 0x06, 0x7c, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0xb0, 0xd0, 0x50, 0x9c, 0xe7, 0xf9, 0xfe, 0xce, 0xbe, 0x61, 0x78, 0x9f, 0xe7, 0xf0, 0x74, 0x95, 0x64, 0x7b, 0x9c, 0xe7, 0x38, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc7, 0x4c, 0x7b, 0xb7, 0xc0, 0xff, 0x7f, 0xbf, 0xcf, 0x77, 0x37, 0x67, 0xdb, 0x3f, 0xff, 0xe1, 0x1e, 0xf3, 0x01, 0x81, 0x81, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x30, 0x2f, 0x2f, 0x2b, 0x29, 0x2a, 0x2d, 0x2d, 0x23, 0x3e, 0x00, 0x1e, 0x13, 0x14, 0x17, 0x15, 0x14, 0x15, 0x15, 0x15, 0x16, 0x16, 0x11, 0x1f, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//CUPID
		{
			//BLACK
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x30, 0x08, 0x98, 0x90, 0x90, 0x88, 0x04, 0x3c, 0xd0, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0xae, 0x31, 0x31, 0x49, 0x41, 0x62, 0x7c, 0x93, 0x0c, 0x01, 0x59, 0x9d, 0x81, 0x1a, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x10, 0x1c, 0x02, 0x83, 0xc2, 0x44, 0x79, 0x22, 0xa4, 0x7e, 0x40, 0x48, 0x3e, 0x35, 0x42, 0x4a, 0x36, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x03, 0x02, 0x04, 0x04, 0x05, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			//WHITE
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0x60, 0xb0, 0xd8, 0xcc, 0xf4, 0x64, 0x6c, 0x6c, 0x76, 0xfa, 0xc2, 0x2e, 0xc8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x70, 0x9f, 0x51, 0xce, 0xce, 0xb6, 0xbe, 0x9d, 0x83, 0x6c, 0xf3, 0xfe, 0xa6, 0x62, 0x7e, 0xe5, 0x01, 0xfe, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x08, 0xee, 0xe3, 0xfd, 0x7c, 0x3d, 0xbb, 0x86, 0xdd, 0x5b, 0x81, 0xbf, 0xb7, 0xc1, 0xca, 0xbd, 0xb5, 0xc9, 0x7d, 0x05, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x05, 0x05, 0x05, 0x04, 0x0d, 0x0b, 0x0b, 0x0a, 0x08, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//TURKEY
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x20, 0x20, 0x40, 0xa0, 0x20, 0x20, 0xe0, 0xc0, 0xf0, 0x08, 0x34, 0x4a, 0xf1, 0x62, 0x41, 0x67, 0x78, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xd2, 0x93, 0x25, 0x48, 0x93, 0x24, 0xe8, 0x11, 0x16, 0x28, 0x44, 0x47, 0xc4, 0x27, 0x1c, 0x20, 0x11, 0x22, 0x12, 0x3e, 0xf6, 0xfc, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x05, 0x09, 0x12, 0x35, 0x57, 0x58, 0xb0, 0xd0, 0x98, 0x87, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc0, 0x40, 0x30, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0f, 0x0f, 0x04, 0x00, 0x04, 0x0f, 0x0f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x30, 0xd0, 0xd0, 0xb0, 0x50, 0xd0, 0xd0, 0x10, 0x38, 0x0c, 0xf6, 0xcb, 0xb5, 0x0e, 0x9d, 0xbe, 0x98, 0x87, 0x7c, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x83, 0x2d, 0x6c, 0xda, 0xb7, 0x6c, 0xdb, 0x17, 0xee, 0xe9, 0xd7, 0xbb, 0xb8, 0x3b, 0xd8, 0xe3, 0xdf, 0xee, 0xdd, 0xed, 0xc1, 0x09, 0x03, 0xf8, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x0c, 0x1a, 0x36, 0x6d, 0xca, 0xa8, 0xa7, 0x4f, 0x2f, 0x67, 0x78, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x3f, 0xbf, 0xcf, 0x70, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x0f, 0x1a, 0x10, 0x10, 0x1b, 0x0f, 0x1b, 0x10, 0x10, 0x1b, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//GROUNDHOG
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0x68, 0x48, 0x10, 0x08, 0xc8, 0x88, 0x88, 0x84, 0x02, 0x04, 0x02, 0x84, 0x88, 0xc8, 0xf8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x5c, 0x67, 0x43, 0xc0, 0x80, 0x74, 0x88, 0x0b, 0x12, 0x13, 0x14, 0x72, 0x52, 0x77, 0x1e, 0x13, 0xc8, 0x79, 0x9e, 0x40, 0xa0, 0xa0, 0xc0, 0x80, 0x00, 0x00, 0x3c, 0x42, 0x4f, 0x50, 0x65, 0x35, 0xf5, 0x0f, 0x04, 0x03, 0x02, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0x0d, 0xf3, 0x86, 0xcf, 0x69, 0x37, 0x1a, 0x0a, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x3e, 0x01, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x10, 0x30, 0xd8, 0x08, 0x04, 0x04, 0x02, 0x0f, 0x70, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x11, 0x14, 0x1c, 0x14, 0x1c, 0x14, 0x1e, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0c, 0x08, 0x0a, 0x0a, 0x0e, 0x0a, 0x0f, 0x0a, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0xf8, 0x0c, 0xf4, 0x94, 0xb4, 0xec, 0xf4, 0x34, 0x74, 0x76, 0x7b, 0xfd, 0xfb, 0xfd, 0x7b, 0x76, 0x34, 0x04, 0x8c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x7f, 0xa3, 0x98, 0xbc, 0x3f, 0x7f, 0x8b, 0x77, 0xf4, 0xed, 0xec, 0xeb, 0x8d, 0xad, 0x88, 0xe1, 0xec, 0x37, 0x86, 0x61, 0xbf, 0x50, 0x50, 0x30, 0x60, 0xc0, 0x7e, 0xc3, 0xbd, 0xb0, 0xaf, 0x9a, 0xca, 0x0a, 0xf0, 0xfb, 0xfc, 0xfd, 0xfc, 0xfc, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xf8, 0xf2, 0x0c, 0x79, 0x30, 0x96, 0xc8, 0x65, 0x35, 0x18, 0x0f, 0x00, 0x80, 0x80, 0xc0, 0x60, 0xbf, 0xc1, 0xfe, 0xff, 0xff, 0xff, 0x3f, 0xcf, 0x6f, 0xcf, 0x27, 0xf7, 0xfb, 0xfb, 0xfd, 0xf0, 0x8f, 0x39, 0xe1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x19, 0x36, 0x2e, 0x2b, 0x23, 0x2b, 0x23, 0x2b, 0x21, 0x32, 0x1f, 0x01, 0x00, 0x0f, 0x18, 0x13, 0x17, 0x15, 0x15, 0x11, 0x15, 0x10, 0x15, 0x13, 0x1e, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//UNCLESAM
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x82, 0xfe, 0x82, 0xfe, 0x82, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x8e, 0x87, 0xc6, 0xb7, 0x0e, 0x17, 0x46, 0x77, 0xff, 0x8e, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x4c, 0x62, 0x51, 0xf9, 0x22, 0x21, 0xc7, 0x9f, 0x7f, 0x7c, 0xbf, 0xff, 0xa3, 0xe0, 0x90, 0x90, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x81, 0x41, 0x41, 0x21, 0xbd, 0x83, 0x41, 0x71, 0x0e, 0x02, 0x04, 0x84, 0x69, 0x19, 0xc2, 0x32, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0f, 0x1f, 0x1e, 0x1a, 0x1d, 0x1d, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x0f, 0x0e, 0x0f, 0x0c, 0x0e, 0x0e, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0x01, 0x7d, 0x01, 0x7d, 0x01, 0x7d, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x89, 0x71, 0x78, 0x39, 0x48, 0xf1, 0xe8, 0xb9, 0x88, 0x00, 0x71, 0x89, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x38, 0xce, 0xb3, 0x9d, 0xae, 0x06, 0xdd, 0xde, 0x38, 0x60, 0x80, 0x83, 0x40, 0x00, 0x5c, 0x1f, 0x68, 0x68, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc3, 0x42, 0x62, 0xa2, 0xb2, 0xde, 0x42, 0x7c, 0xbe, 0x8e, 0xf1, 0x1d, 0xcb, 0x7b, 0x96, 0xe6, 0x3d, 0xcd, 0x73, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x19, 0x30, 0x20, 0x21, 0x25, 0x22, 0x22, 0x33, 0x1f, 0x01, 0x00, 0x00, 0x1f, 0x11, 0x10, 0x11, 0x10, 0x13, 0x11, 0x11, 0x19, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	}
};

const unsigned char portrait[6][112]  = {
	{
		0xff, 0xff, 0xff, 0xff, 0x3f, 0xdf, 0xef, 0xf7, 0xfb, 0xfd, 0x7d, 0x7d, 0xbd, 0xbd, 0xbd, 0xdd, 0xdd, 0xdd, 0xdd, 0x9d, 0xbb, 0xb7, 0x2f, 0x5f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0xbf, 0xdf, 0x80, 0xbf, 0x07, 0x1b, 0xbd, 0x0e, 0xef, 0x87, 0xfb, 0xfb, 0xf5, 0xc9, 0xc9, 0xc9, 0xfd, 0xfd, 0x89, 0x4b, 0xcb, 0xf3, 0xf6, 0x0c, 0xc1, 0xff, 0xdf, 0xec, 0xeb, 0xf7, 0xf7, 0xf7, 0x83, 0xbc, 0x7f, 0xff, 0x7e, 0xfe, 0xfd, 0xfc, 0xfa, 0xfa, 0xf6, 0xe5, 0xd5, 0xd1, 0xe5, 0xf6, 0xfa, 0xfa, 0xfa, 0x00, 0xef, 0xdf, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0e, 0x0f, 0x0e, 0x0d, 0x0b, 0x0b, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0b, 0x0d, 0x0e, 0x0f, 0x0f, 0x0f,
	},
	{
		0x17, 0x17, 0x17, 0x37, 0x37, 0x7b, 0x3b, 0x9b, 0xc9, 0xe9, 0xb1, 0xb1, 0x91, 0x11, 0x13, 0xb3, 0xf7, 0xf7, 0xaf, 0x0f, 0x1f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x82, 0x82, 0x82, 0x82, 0x42, 0x22, 0xf3, 0xff, 0xef, 0x6d, 0xab, 0xab, 0xff, 0xe7, 0xef, 0x0d, 0x1d, 0x1d, 0x6c, 0x6a, 0x9c, 0xdd, 0xe6, 0xb1, 0x05, 0xd2, 0xdb, 0xff, 0xbe, 0xde, 0xde, 0xee, 0xef, 0xf4, 0xf3, 0xf7, 0xef, 0xef, 0xdf, 0xdf, 0xbf, 0xbf, 0xdf, 0xbe, 0xdc, 0xbc, 0xdc, 0xc7, 0xb7, 0x7b, 0xfb, 0xfd, 0xfe, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x03, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x03, 0x0f, 0x0f, 0x0f, 0x0c, 0x03, 0x0f, 0x0f, 0x0f, 0x0f,
	},
	{
		0xff, 0x7f, 0xbf, 0x7f, 0x9f, 0xdf, 0xef, 0xf3, 0xfb, 0xfd, 0xfb, 0xfb, 0xfb, 0xfb, 0xf7, 0xfb, 0xfd, 0xfd, 0xfd, 0xdd, 0xbb, 0xbb, 0xfb, 0xcb, 0xab, 0x77, 0xff, 0xff, 0xef, 0x16, 0xf9, 0xff, 0xcf, 0xf7, 0xff, 0xff, 0xfb, 0x87, 0x3b, 0xdb, 0x4d, 0x4b, 0x47, 0xcf, 0xdf, 0x3f, 0xfd, 0xff, 0x7f, 0x2b, 0x2d, 0xf3, 0xff, 0xfe, 0x0d, 0xf3, 0xfb, 0x06, 0xbd, 0xa3, 0xdf, 0xa1, 0x9e, 0x71, 0xcf, 0xed, 0xf2, 0xff, 0x98, 0x37, 0x71, 0x70, 0x7f, 0xe3, 0xcc, 0xf0, 0xf1, 0x07, 0xe0, 0xe9, 0xf7, 0xfb, 0xfc, 0xff, 0x0d, 0x0c, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0e, 0x0e, 0x0d, 0x0d, 0x0b, 0x0b, 0x0b, 0x0b, 0x03, 0x0b, 0x0b, 0x0b, 0x0b, 0x0c, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,

	},
	{
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xbf, 0xdf, 0xef, 0x73, 0x33, 0x77, 0xf9, 0xfd, 0xfb, 0xfd, 0xfe, 0xfd, 0x7b, 0x37, 0xef, 0x9f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xfe, 0xff, 0xe1, 0xda, 0xbb, 0xa2, 0x02, 0x88, 0x41, 0xef, 0xef, 0xe1, 0xe8, 0xe2, 0xe3, 0xda, 0xa1, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0x3e, 0x31, 0x0f, 0xff, 0xff, 0xff, 0xfc, 0xfb, 0xf6, 0xf5, 0xf5, 0xf5, 0xe5, 0x07, 0x07, 0x03, 0x13, 0x7b, 0xf7, 0xe0, 0xff, 0xff, 0xff, 0x07, 0x09, 0x0d, 0x0e, 0x0e, 0x0f, 0x0f, 0x00, 0x07, 0x0b, 0x0d, 0x0b, 0x07, 0x0b, 0x0d, 0x0b, 0x07, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0e, 0x0e, 0x0c, 0x09, 0x07, 0x0f
	},
	{
		0x7f, 0x9f, 0xef, 0x6f, 0xef, 0xdf, 0xbf, 0xdf, 0xdf, 0xdf, 0xef, 0xef, 0xf7, 0xfb, 0xfd, 0xfb, 0xfb, 0xfd, 0xf3, 0xef, 0xf7, 0xef, 0xcf, 0x0f, 0xef, 0x1f, 0xff, 0xff, 0xfc, 0x3b, 0x97, 0xc6, 0xd4, 0xfe, 0xff, 0xff, 0xaf, 0xef, 0xbc, 0xa1, 0x99, 0x89, 0xc1, 0x3f, 0xbf, 0xdf, 0x9f, 0x01, 0x09, 0x59, 0xc0, 0x7f, 0x68, 0xf7, 0xef, 0x1f, 0xff, 0xf0, 0xe7, 0xcb, 0x1f, 0x2f, 0x5f, 0x73, 0x6d, 0xde, 0xbe, 0x7e, 0x7d, 0xfd, 0xfc, 0xfb, 0xe3, 0xeb, 0xeb, 0xe3, 0x7d, 0x7c, 0x3d, 0x1e, 0xcf, 0xe0, 0xf7, 0xf8, 0x0f, 0x07, 0x03, 0x08, 0x0e, 0x0f, 0x0f, 0x0f, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0f, 0x0f, 0x0e, 0x08, 0x03, 0x07, 0x0f, 0x0f,
	},
	{
		0xff, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xa7, 0x56, 0x20, 0x50, 0x20, 0x50, 0x20, 0x50, 0x27, 0x57, 0x27, 0x57, 0x21, 0x50, 0x20, 0x50, 0xa0, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x47, 0x93, 0xd8, 0x6c, 0x26, 0xc2, 0xf2, 0x52, 0x42, 0x42, 0x32, 0xf2, 0x42, 0x42, 0x52, 0xf2, 0xc2, 0x26, 0x6c, 0xd8, 0x90, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7b, 0xbb, 0xd8, 0x99, 0x53, 0xef, 0x1f, 0x7e, 0x2f, 0xa8, 0xab, 0x2b, 0x7e, 0x1f, 0xef, 0x53, 0x99, 0xd8, 0xbb, 0x7b, 0xfc, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x03, 0x0c, 0x0f, 0x0f, 0x0f, 0x0f, 0x08, 0x0b, 0x09, 0x0c, 0x0c, 0x03, 0x07, 0x03, 0x0c, 0x09, 0x0b, 0x08, 0x0f, 0x0f, 0x0f, 0x0f, 0x0c, 0x03, 0x0f, 0x0f,
	}
};

//Punching: 38, 39
const unsigned char punching[6][2][190]  = {
	{
		//SANTA
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x90, 0x60, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x7e, 0x41, 0x80, 0x80, 0x40, 0x60, 0x50, 0x48, 0x40, 0x60, 0x58, 0x76, 0x49, 0x54, 0x4b, 0x5f, 0x70, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe0, 0x20, 0x60, 0x20, 0x20, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x24, 0x42, 0x43, 0xe4, 0x1c, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x10, 0xf8, 0x48, 0x48, 0x38, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x0f, 0x00, 0x00, 0x80, 0xc0, 0x40, 0x20, 0x18, 0x06, 0x01, 0x03, 0x83, 0x43, 0x43, 0x23, 0x33, 0xcb, 0x47, 0x07, 0x07, 0x07, 0x06, 0x8f, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x1c, 0x02, 0x01, 0x00, 0x00, 0x00, 0x06, 0x0d, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0f, 0x0f, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}, {
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0xb0, 0xd8, 0xe8, 0xe8, 0xe8, 0xe8, 0xe8, 0xe8, 0xe8, 0xe8, 0x68, 0x98, 0xd0, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0xbf, 0x81, 0xbe, 0x7f, 0x7f, 0xbf, 0x9f, 0xaf, 0xb7, 0xbf, 0x9f, 0xa7, 0x89, 0xb6, 0xab, 0xb4, 0xa0, 0x8f, 0xb8, 0xa0, 0xa0, 0xa0, 0xb0, 0x10, 0xd0, 0x90, 0xd0, 0xd0, 0xd0, 0x30, 0xe0, 0x00, 0x00, 0x3c, 0x66, 0xdb, 0xbd, 0xbc, 0x1b, 0xe3, 0xfb, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xef, 0x07, 0xb7, 0xb7, 0xc7, 0x77, 0x17, 0x17, 0x17, 0x17, 0x17, 0x30, 0x2f, 0x2f, 0x2f, 0x2f, 0x2f, 0x30, 0x1f, 0xc0, 0x60, 0x20, 0xb0, 0xdc, 0xe7, 0xf9, 0xfe, 0xfc, 0x7c, 0xbc, 0xbc, 0xdc, 0xcc, 0x34, 0xb8, 0xf8, 0xf8, 0xf8, 0xf9, 0x70, 0x8f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x20, 0x20, 0x27, 0x27, 0x27, 0x23, 0x3d, 0x06, 0x03, 0x01, 0x0f, 0x19, 0x12, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x13, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//EASTER BUNNY
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x02, 0x05, 0x05, 0x05, 0xc5, 0x25, 0x1e, 0x06, 0x20, 0x22, 0x26, 0x22, 0x28, 0x2c, 0x2a, 0x27, 0x3e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x20, 0xe0, 0x18, 0x07, 0x00, 0x00, 0x00, 0x01, 0x01, 0x81, 0x63, 0x5b, 0x47, 0x27, 0x19, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x43, 0x44, 0x28, 0x98, 0x87, 0x40, 0x30, 0x08, 0x18, 0xa4, 0x40, 0x06, 0x99, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x08, 0x12, 0x16, 0x17, 0x13, 0x12, 0x1c, 0x00, 0x00, 0x07, 0x09, 0x08, 0x0a, 0x0b, 0x0a, 0x0a, 0x09, 0x09, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x04, 0x0d, 0x0a, 0x0a, 0xea, 0x3a, 0xda, 0xe1, 0xf9, 0xdf, 0xdd, 0xd9, 0xdd, 0xd7, 0xd3, 0xd5, 0xd8, 0xc1, 0xdf, 0xd0, 0xd0, 0xd0, 0xd0, 0xd0, 0xd0, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0xb0, 0xd0, 0xd0, 0x1c, 0xe7, 0xf8, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0x7e, 0x9c, 0xa4, 0xb8, 0xd8, 0x66, 0x3e, 0x02, 0x02, 0x06, 0x05, 0x05, 0x05, 0x05, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x40, 0x40, 0x40, 0x67, 0xac, 0xbb, 0xd7, 0x67, 0x78, 0xbf, 0xcf, 0xf7, 0xe7, 0x5b, 0xbf, 0xf9, 0x66, 0x9f, 0xf0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0e, 0x19, 0x37, 0x2d, 0x29, 0x2a, 0x2c, 0x2d, 0x23, 0x3f, 0x0f, 0x18, 0x16, 0x17, 0x15, 0x14, 0x15, 0x15, 0x16, 0x16, 0x11, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//CUPID
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x30, 0x08, 0x98, 0x90, 0x90, 0x88, 0x04, 0x3c, 0xd0, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x08, 0x00, 0xc0, 0xc0, 0x86, 0xcf, 0x1e, 0x0f, 0x86, 0x60, 0xae, 0x31, 0x31, 0x49, 0x41, 0x62, 0x7c, 0x93, 0x0c, 0x01, 0xd9, 0xdd, 0xc1, 0x1a, 0xfe, 0x41, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf1, 0x10, 0x1c, 0x02, 0x83, 0xc2, 0x44, 0x79, 0x22, 0xa4, 0x68, 0x30, 0x08, 0x08, 0x09, 0x09, 0x0b, 0x09, 0x09, 0x06, 0x05, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x03, 0x02, 0x04, 0x04, 0x05, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0xc0, 0x60, 0xb0, 0xd8, 0xcc, 0xf4, 0x64, 0x6c, 0x6c, 0x76, 0xfa, 0xc2, 0x2e, 0xc8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x34, 0x2c, 0x34, 0xfc, 0x20, 0x2f, 0x79, 0x30, 0xe1, 0xf0, 0x79, 0x9f, 0x51, 0xce, 0xce, 0xb6, 0xbe, 0x9d, 0x83, 0x6c, 0xf3, 0xfe, 0x26, 0x22, 0x3e, 0xe5, 0x01, 0xbe, 0xa3, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0xfa, 0x0a, 0xef, 0xe3, 0xfd, 0x7c, 0x3d, 0xbb, 0x86, 0xdd, 0x5b, 0x97, 0xcf, 0x77, 0x17, 0x16, 0x16, 0x14, 0x16, 0x16, 0x19, 0x0a, 0x0d, 0x05, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x05, 0x05, 0x05, 0x04, 0x0d, 0x0b, 0x0b, 0x0a, 0x08, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//TURKEY
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x90, 0x10, 0x20, 0xd0, 0x10, 0x10, 0x78, 0xe8, 0x08, 0x08, 0xf0, 0x10, 0x10, 0x90, 0x60, 0x40, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xe9, 0xc9, 0x92, 0xa4, 0x49, 0x92, 0xf4, 0x08, 0x0b, 0x14, 0x22, 0xa3, 0x62, 0x03, 0x02, 0x02, 0x02, 0xab, 0xd4, 0x86, 0x85, 0x82, 0x02, 0x09, 0x14, 0x79, 0x98, 0x93, 0x9c, 0x98, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x09, 0x1a, 0x2b, 0x2c, 0x58, 0x68, 0xcc, 0xc3, 0xc0, 0x40, 0x40, 0x40, 0xc0, 0xe0, 0x20, 0x18, 0x07, 0x00, 0x01, 0x01, 0x01, 0x01, 0x07, 0x0f, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x07, 0x07, 0x02, 0x00, 0x02, 0x07, 0x07, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x30, 0x98, 0x68, 0xe8, 0xd8, 0x28, 0xe8, 0xec, 0x84, 0x14, 0xf4, 0xf4, 0x0c, 0xe8, 0xe8, 0x68, 0x98, 0xb0, 0x60, 0xc0, 0x80, 0xc0, 0x40, 0xc0, 0x40, 0x40, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc1, 0x16, 0x36, 0x6d, 0x5b, 0xb6, 0x6d, 0x0b, 0xf7, 0xf4, 0xeb, 0xdd, 0x5c, 0x9d, 0xfc, 0xfd, 0xfd, 0xfd, 0x54, 0x2b, 0x79, 0x7a, 0x7d, 0xfd, 0xf6, 0xeb, 0x86, 0x67, 0x6c, 0x63, 0x66, 0xdc, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x0d, 0x1b, 0x36, 0x65, 0x54, 0xd3, 0xa7, 0x97, 0x33, 0x3c, 0x3f, 0xbf, 0xbf, 0xbf, 0x3f, 0x1f, 0xdf, 0x67, 0x38, 0x0f, 0x02, 0x02, 0x02, 0x0e, 0x18, 0x10, 0x1f, 0x02, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0d, 0x08, 0x08, 0x0d, 0x07, 0x0d, 0x08, 0x08, 0x0d, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//GROUNDHOG
		{
			//Need To Fix This
			0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0x68, 0x48, 0x10, 0x08, 0xc8, 0x88, 0x88, 0x84, 0x02, 0x04, 0x02, 0x84, 0x88, 0xc8, 0xf8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x5c, 0x67, 0x43, 0xc0, 0x80, 0x74, 0x88, 0x0b, 0x12, 0x13, 0x14, 0x72, 0x52, 0x77, 0x1e, 0x13, 0xc8, 0x79, 0x9e, 0x40, 0xa0, 0xa0, 0xc0, 0x80, 0x00, 0x00, 0x3c, 0x42, 0x4f, 0x50, 0x65, 0x35, 0xf5, 0x0f, 0x04, 0x03, 0x02, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0x0d, 0xf3, 0x86, 0xcf, 0x69, 0x37, 0x1a, 0x0a, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x3e, 0x01, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x10, 0x30, 0xd8, 0x08, 0x04, 0x04, 0x02, 0x0f, 0x70, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x11, 0x14, 0x1c, 0x14, 0x1c, 0x14, 0x1e, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0c, 0x08, 0x0a, 0x0a, 0x0e, 0x0a, 0x0f, 0x0a, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0c, 0xf4, 0x94, 0xb4, 0xec, 0xf4, 0x34, 0x74, 0x76, 0x7b, 0xfd, 0xfb, 0xfd, 0x7b, 0x76, 0x34, 0x04, 0x8c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x7f, 0xa3, 0x98, 0xbc, 0x3f, 0x7f, 0x8b, 0x77, 0xf4, 0xed, 0xec, 0xeb, 0x8d, 0xad, 0x88, 0xe1, 0xec, 0x37, 0x86, 0xa1, 0xbf, 0xa0, 0xa0, 0xb0, 0x90, 0x50, 0x90, 0x50, 0x50, 0x50, 0x30, 0xe0, 0x00, 0x00, 0x7e, 0xc3, 0xbd, 0xb0, 0xaf, 0x1a, 0xca, 0xea, 0xf0, 0xfb, 0xf8, 0xe5, 0xfc, 0xfc, 0xfd, 0xfd, 0xdd, 0xed, 0x05, 0xf6, 0x16, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x14, 0x11, 0x14, 0x15, 0x15, 0x18, 0x0f, 0xc0, 0x60, 0xa0, 0xb0, 0xdc, 0xe7, 0xf9, 0xfe, 0xff, 0x7f, 0xbf, 0xbf, 0xdf, 0xcf, 0x37, 0xb9, 0xff, 0xff, 0xff, 0xfb, 0x70, 0x8f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x20, 0x2f, 0x27, 0x2f, 0x27, 0x23, 0x3d, 0x06, 0x03, 0x01, 0x0f, 0x19, 0x12, 0x15, 0x15, 0x15, 0x11, 0x15, 0x10, 0x14, 0x13, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//UNCLESAM
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x04, 0xfc, 0x04, 0xfc, 0x04, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0x1c, 0x0f, 0x8d, 0x6f, 0x1d, 0x2f, 0x8d, 0xef, 0xff, 0x1c, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x79, 0x89, 0x09, 0x09, 0x39, 0xf9, 0x59, 0x79, 0x4d, 0x4d, 0x75, 0x05, 0x05, 0x05, 0x05, 0x07, 0x09, 0x09, 0x09, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x40, 0x20, 0x10, 0x88, 0x44, 0x22, 0x93, 0x92, 0x4a, 0x4e, 0x33, 0xa2, 0x84, 0x58, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x3f, 0x39, 0x34, 0x1c, 0x1a, 0x01, 0x01, 0x00, 0x00, 0x03, 0x07, 0x06, 0x06, 0x07, 0x07, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x02, 0x02, 0xfa, 0x02, 0xfa, 0x02, 0xfa, 0x02, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x12, 0xe3, 0xf0, 0x72, 0x90, 0xe2, 0xd0, 0x72, 0x10, 0x00, 0xe3, 0x12, 0xfe, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0xf8, 0x86, 0x76, 0xf6, 0xf6, 0xc6, 0x06, 0xa6, 0x86, 0xb2, 0xb2, 0x8a, 0xfa, 0x0a, 0x0a, 0x0a, 0x18, 0x16, 0x16, 0x16, 0x18, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xc0, 0x40, 0x60, 0xb0, 0xd8, 0xec, 0x76, 0xbb, 0xdd, 0x6c, 0x6d, 0xb5, 0xb1, 0xcc, 0x5d, 0x7b, 0xa6, 0x9c, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x60, 0x40, 0x46, 0x4b, 0x63, 0x25, 0x3e, 0x02, 0x03, 0x07, 0x0c, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	}
};

//Hurt: 31, 40
const unsigned char hurt[6][2][155]  = {
	//SANTA
	{
		{
			0x00, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x08, 0x04, 0x84, 0x44, 0xa2, 0xa2, 0xa2, 0xb2, 0x54, 0x54, 0x58, 0xd0, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x67, 0xe4, 0x2c, 0x1e, 0x3b, 0xce, 0x97, 0x1c, 0x22, 0x27, 0x22, 0x10, 0x15, 0xdf, 0xd1, 0x1d, 0x06, 0x1e, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x38, 0x60, 0x80, 0x00, 0x80, 0x43, 0x4f, 0x7f, 0x58, 0xf0, 0xb0, 0x30, 0x30, 0xb0, 0xe8, 0x7c, 0x46, 0xf3, 0x1c, 0x08, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x08, 0x11, 0x1f, 0x38, 0xd0, 0x10, 0x10, 0x10, 0x18, 0x0f, 0x01, 0xc3, 0x3d, 0x60, 0xc0, 0x80, 0xe0, 0xf3, 0xfd, 0xfd, 0xfc, 0x7c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x7b, 0x78, 0x7c, 0x7e, 0x3e, 0x3f, 0x1f, 0x1f, 0x0f, 0x07, 0x01, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
		}, {
			0x00, 0x00, 0x00, 0xe0, 0x38, 0xcc, 0xf6, 0xfa, 0x7a, 0xbb, 0x5d, 0x5d, 0x5d, 0x4d, 0xab, 0xaa, 0xa6, 0x2c, 0x98, 0x70, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xc3, 0x98, 0x1b, 0xd3, 0xe1, 0xc4, 0x31, 0x68, 0xe3, 0xdd, 0xd8, 0xdd, 0xef, 0xea, 0x20, 0x2e, 0xe2, 0xf9, 0xe1, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xc7, 0x9f, 0x7f, 0xff, 0x7f, 0xbc, 0xb0, 0x80, 0xa7, 0x0f, 0x4f, 0xcf, 0xcf, 0x4f, 0x17, 0x83, 0xb9, 0x0c, 0xe3, 0xf6, 0x04, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0c, 0x18, 0x37, 0x2e, 0x60, 0xc7, 0x2f, 0xef, 0xef, 0xef, 0xe7, 0xf0, 0xfe, 0x3c, 0xc2, 0x9f, 0x3f, 0x7f, 0x1f, 0x0c, 0x02, 0x02, 0x03, 0x82, 0xe6, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xc3, 0x84, 0x87, 0x83, 0x81, 0xc1, 0x40, 0x60, 0x20, 0x30, 0x18, 0x0e, 0x04, 0x04, 0x04, 0x06, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00,
		}
	},
	//EASTERBUNNY
	{
		{
			0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x40, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x10, 0x23, 0x25, 0x45, 0x4d, 0xcd, 0x1d, 0x0e, 0x02, 0x00, 0x45, 0x92, 0x65, 0xe0, 0xd4, 0xe0, 0x95, 0x7f, 0x12, 0x0e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x08, 0xff, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0xe1, 0x9d, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x04, 0x08, 0x31, 0xc7, 0x1a, 0x64, 0x38, 0xa3, 0x9c, 0x90, 0xf0, 0x50, 0x48, 0x48, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0xc0, 0x60, 0xa0, 0xa0, 0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0x20, 0x20, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x30, 0x2f, 0x6f, 0x5c, 0xda, 0xba, 0xb2, 0x32, 0xe2, 0xf1, 0xfd, 0xff, 0xba, 0x6d, 0x9a, 0x1f, 0x2b, 0x1f, 0x6a, 0x80, 0xed, 0x31, 0x1c, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x18, 0xec, 0xf7, 0x00, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0x1e, 0x62, 0xfc, 0x86, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x05, 0x0c, 0x0b, 0x1b, 0x77, 0xce, 0x38, 0xe5, 0x9b, 0xc7, 0x5c, 0x63, 0x6e, 0x08, 0xac, 0xb4, 0xb4, 0x8c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x04, 0x05, 0x06, 0x02, 0x02, 0x02, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	//CUPID
	{
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x40, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x94, 0x82, 0x03, 0xf0, 0x09, 0x59, 0x99, 0x48, 0x10, 0x63, 0xad, 0xf3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x84, 0xbf, 0xe0, 0x04, 0x1f, 0x0b, 0x10, 0x21, 0x24, 0x2d, 0x2c, 0xe5, 0x5e, 0x43, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x20, 0x60, 0x3f, 0x0a, 0x8a, 0xca, 0x52, 0x62, 0x62, 0x52, 0x8a, 0x97, 0x98, 0x88, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x40, 0x40, 0xc0, 0xc0, 0x60, 0xa0, 0x20, 0xe0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x06, 0x6b, 0x7d, 0xfc, 0x0f, 0xf6, 0xa6, 0x66, 0xb7, 0xef, 0x9c, 0x52, 0x0c, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x86, 0x7b, 0x40, 0x1f, 0xfb, 0xe0, 0xf4, 0xef, 0xde, 0xdb, 0xd2, 0xd3, 0x1a, 0xa1, 0xbc, 0xc0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x11, 0xd1, 0x9f, 0xc0, 0xf5, 0x75, 0x35, 0xad, 0x9d, 0x9d, 0xad, 0x75, 0x68, 0x67, 0x74, 0x84, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	//TURKEY
	{
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x40, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x48, 0x4c, 0x96, 0x23, 0x4c, 0x90, 0x21, 0xc6, 0x18, 0xe0, 0x43, 0x7f, 0x7f, 0x61, 0x82, 0xc7, 0x3a, 0xc8, 0xc8, 0x4a, 0xcf, 0x90, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x27, 0x1e, 0x14, 0x0d, 0x0a, 0x04, 0x07, 0x06, 0x05, 0x08, 0x80, 0x00, 0x00, 0x10, 0x0f, 0x11, 0x0a, 0x15, 0x0d, 0x1f, 0xff, 0x04, 0x08, 0x08, 0x10, 0x10, 0x20, 0xc0, 0x00, 0x00, 0x07, 0x08, 0x08, 0x08, 0x04, 0x04, 0x04, 0x02, 0x02, 0x02, 0x05, 0x09, 0x18, 0x38, 0x68, 0xc8, 0x88, 0x18, 0x3c, 0x64, 0xc3, 0x82, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x01, 0x00, 0x01, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x40, 0x40, 0xc0, 0x40, 0x40, 0x40, 0x40, 0xc0, 0x80, 0xc0, 0x60, 0xb0, 0xd0, 0xb0, 0xd0, 0x10, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0c, 0xb6, 0xb3, 0x69, 0xdc, 0xb3, 0x6f, 0xde, 0x39, 0xe7, 0x1f, 0xbc, 0x80, 0x80, 0x9e, 0x7d, 0x38, 0xc5, 0x37, 0x37, 0xb5, 0x30, 0x6f, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x3e, 0xd8, 0xe1, 0xeb, 0xf2, 0xf5, 0xfb, 0xf8, 0xf9, 0xfa, 0xf7, 0x7f, 0xff, 0xff, 0xef, 0xf0, 0xee, 0xf5, 0xea, 0xf2, 0xe0, 0x00, 0xfb, 0xf7, 0xf5, 0xec, 0xe8, 0xd8, 0x30, 0xe0, 0x0f, 0x18, 0x17, 0x17, 0x17, 0x1b, 0x0b, 0x0b, 0x0d, 0x05, 0x0d, 0x1a, 0x36, 0x67, 0xc7, 0x97, 0x37, 0x77, 0xe7, 0xc3, 0x9b, 0x3c, 0x6d, 0xcb, 0x8b, 0x9b, 0x17, 0x17, 0x17, 0x18, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x04, 0x04, 0x06, 0x03, 0x06, 0x04, 0x04, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	//GROUNDHOG
	{
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0x68, 0x48, 0x10, 0x08, 0x28, 0xa8, 0x28, 0xa4, 0x22, 0x04, 0x22, 0xa4, 0x28, 0xe8, 0xf8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3c, 0x67, 0xc3, 0x40, 0x80, 0x74, 0x88, 0x0a, 0x31, 0x72, 0xf4, 0xf2, 0xd2, 0xf6, 0x3d, 0x12, 0xc8, 0x79, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0xc0, 0x00, 0x00, 0x00, 0x0d, 0x31, 0x42, 0x43, 0x83, 0x02, 0x02, 0x02, 0x02, 0x02, 0x7f, 0x41, 0xfb, 0xac, 0xa8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0f, 0x1c, 0x34, 0xe8, 0x35, 0x2b, 0x14, 0x0f, 0x01, 0x01, 0xc3, 0x3d, 0x60, 0xc0, 0x80, 0x20, 0x13, 0x9d, 0xf5, 0xec, 0x74, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x63, 0x40, 0x64, 0x62, 0x22, 0x35, 0x1b, 0x1d, 0x0f, 0x07, 0x01, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0xf8, 0x0c, 0xf4, 0x94, 0xb4, 0xec, 0xf4, 0xd4, 0x54, 0xd6, 0x5b, 0xdd, 0xfb, 0xdd, 0x5b, 0xd6, 0x14, 0x04, 0x8c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe0, 0x3f, 0xc3, 0x98, 0x3c, 0xbf, 0x7f, 0x8b, 0x77, 0xf5, 0xce, 0x8d, 0x0b, 0x0d, 0x2d, 0x09, 0xc2, 0xed, 0x37, 0x86, 0xe1, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x0f, 0x3f, 0xff, 0xff, 0xff, 0xf2, 0xce, 0xbd, 0xbc, 0x7c, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0x80, 0xbe, 0x04, 0x53, 0x56, 0x04, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x1c, 0x30, 0x63, 0xcb, 0x17, 0xca, 0xd4, 0xeb, 0xf0, 0xfe, 0xfe, 0x3c, 0xc2, 0x9f, 0x3f, 0x7f, 0xdf, 0xec, 0x62, 0x0a, 0x13, 0x8a, 0xe6, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xc3, 0x9c, 0xbf, 0x9b, 0x9d, 0xdd, 0x4a, 0x64, 0x22, 0x30, 0x18, 0x0e, 0x04, 0x04, 0x04, 0x06, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00,
		}
	},
	//UNCLESAM
	{
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x30, 0x68, 0x28, 0xa8, 0xd0, 0x30, 0x70, 0x70, 0xe0, 0xe0, 0xe6, 0xf9, 0xa9, 0x7f, 0xe0, 0x18, 0x84, 0x64, 0x28, 0x48, 0x50, 0x90, 0xa0, 0xee, 0xfe, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x14, 0x27, 0xc4, 0x45, 0x49, 0xbc, 0x4f, 0x57, 0x27, 0x23, 0x23, 0x21, 0xf1, 0x11, 0x1f, 0x80, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x09, 0x0a, 0x0b, 0x3a, 0x7e, 0xf9, 0xf9, 0xde, 0xea, 0xe9, 0x65, 0x04, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x18, 0xcc, 0x94, 0xd4, 0x54, 0x2c, 0xc8, 0x88, 0x88, 0x18, 0x1f, 0x19, 0x06, 0x56, 0x80, 0x1f, 0xe6, 0x7a, 0x9a, 0xd6, 0xb4, 0xac, 0x68, 0x5f, 0x11, 0x01, 0x03, 0xfe, 0x00, 0x00, 0x1f, 0x30, 0x6b, 0xd8, 0x3b, 0xba, 0xb6, 0x43, 0xb0, 0xa8, 0xd8, 0xdc, 0xdc, 0xde, 0x0e, 0xee, 0xe0, 0x7f, 0x80, 0xff, 0x00, 0x00, 0x01, 0x01, 0x03, 0x02, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x11, 0x16, 0x15, 0x74, 0xc5, 0x81, 0x06, 0x06, 0x21, 0x15, 0x16, 0x9a, 0xfb, 0x0d, 0x04, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
};

//Jumping: 31, 42
const unsigned char jumping[6][2][186]  = {
	{
		//SANTA
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x20, 0x10, 0xc8, 0x24, 0x84, 0x44, 0x44, 0x44, 0x44, 0x48, 0x48, 0x50, 0x50, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x20, 0x30, 0x10, 0x1e, 0x11, 0x13, 0x12, 0x1f, 0x7e, 0x8b, 0x12, 0x3f, 0x41, 0x85, 0x85, 0x55, 0xcd, 0x81, 0x9d, 0xf5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x1e, 0x21, 0xa1, 0xe1, 0xd1, 0xce, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x81, 0x82, 0x84, 0x98, 0x90, 0x10, 0x10, 0x90, 0xf8, 0x44, 0x43, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x11, 0xe1, 0xc3, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x9c, 0x64, 0x04, 0x07, 0x03, 0x03, 0x87, 0x48, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1f, 0x3c, 0x78, 0x78, 0x78, 0x78, 0x3e, 0x3d, 0x7c, 0x7c, 0x7c, 0x7c, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}, {
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe0, 0x30, 0xd8, 0xec, 0x36, 0xda, 0x7a, 0xba, 0xba, 0xba, 0xba, 0xb6, 0xb4, 0xac, 0xa8, 0x98, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0xb0, 0xd0, 0xd8, 0xc8, 0xef, 0xe1, 0xee, 0xec, 0xed, 0xe0, 0x81, 0x74, 0xed, 0xc0, 0xbe, 0x7a, 0x7a, 0xaa, 0x32, 0x7e, 0x62, 0x0a, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x30, 0x2f, 0x61, 0xde, 0x5e, 0x1e, 0x2e, 0x31, 0x7f, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0x7e, 0x7d, 0x7b, 0x67, 0x6f, 0xef, 0xef, 0x6f, 0x07, 0xbb, 0xbc, 0xc1, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x18, 0xb7, 0xee, 0x1e, 0x3c, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xf8, 0x63, 0x9b, 0xfb, 0xf8, 0xfc, 0xfc, 0x78, 0xb7, 0xcd, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x38, 0x60, 0xc3, 0x87, 0x87, 0x87, 0x87, 0xc1, 0xc2, 0x83, 0x83, 0x83, 0x83, 0xc1, 0x7e, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//EASTERBUNNY
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x06, 0xfa, 0xfc, 0xf8, 0xfe, 0x02, 0xfc, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x40, 0x40, 0x43, 0x3c, 0x09, 0x01, 0x05, 0x4d, 0x84, 0x91, 0x59, 0x95, 0x4e, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x82, 0x82, 0x71, 0x29, 0xa8, 0x74, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0xc5, 0x35, 0x0d, 0x0a, 0x09, 0x71, 0x82, 0x82, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x08, 0x3f, 0xc0, 0x00, 0x00, 0xf8, 0x10, 0x28, 0xc0, 0x00, 0x18, 0xe4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x33, 0xc0, 0x1e, 0x23, 0xc0, 0x0c, 0x33, 0xc0, 0x1e, 0x23, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x07, 0xf9, 0x05, 0x03, 0x07, 0x01, 0xfd, 0x03, 0x06, 0xfc, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0x40, 0x40, 0x60, 0xa1, 0xa7, 0xbc, 0xc3, 0xf6, 0xfe, 0xfa, 0xb2, 0x7b, 0x6e, 0xa6, 0x6a, 0xb1, 0x03, 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x83, 0x7d, 0x7d, 0x8e, 0xd6, 0x57, 0x8b, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfd, 0xfb, 0x3a, 0xca, 0x72, 0x15, 0xf6, 0x8e, 0x7d, 0x7d, 0x83, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0c, 0x1b, 0x77, 0xc0, 0x3f, 0xff, 0xff, 0x07, 0xef, 0xd7, 0x3f, 0xff, 0xe7, 0x1b, 0xfc, 0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x73, 0xcc, 0x3f, 0xe1, 0xdc, 0x3f, 0xf3, 0xcc, 0x3f, 0xe1, 0xdc, 0x37, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x02, 0x02, 0x02, 0x03, 0x01, 0x03, 0x02, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
	},
	{
		//CUPID
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x40, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x14, 0x02, 0x03, 0x30, 0xc9, 0x19, 0x99, 0xd8, 0x10, 0xa3, 0xed, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x48, 0xcc, 0xd2, 0xca, 0x4b, 0x0c, 0x0e, 0x09, 0x10, 0x20, 0x25, 0x29, 0xe8, 0x61, 0x5f, 0x50, 0x48, 0x48, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x40, 0x7f, 0x0a, 0x0a, 0x0a, 0x12, 0xe2, 0x22, 0x12, 0x0a, 0x8f, 0x48, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x08, 0x08, 0x0a, 0x0f, 0x01, 0x01, 0x02, 0x04, 0x04, 0x05, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x40, 0x40, 0xc0, 0xc0, 0x60, 0xa0, 0x20, 0xe0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x06, 0xeb, 0xfd, 0xfc, 0xcf, 0x36, 0xe6, 0x66, 0x27, 0xef, 0x5c, 0x12, 0xec, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xcc, 0xb6, 0x33, 0x2d, 0x35, 0xb4, 0xf3, 0xf1, 0xf6, 0xef, 0xdf, 0xda, 0xd6, 0x17, 0x9e, 0xa0, 0xaf, 0xb4, 0xb4, 0xcc, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0x21, 0xbf, 0x80, 0xf5, 0xf5, 0xf5, 0xed, 0x1d, 0xdd, 0xed, 0xf5, 0x70, 0xb7, 0xcc, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0c, 0x1b, 0x17, 0x17, 0x15, 0x10, 0x1e, 0x06, 0x0d, 0x0b, 0x0b, 0x0a, 0x08, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//TURKEY
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x40, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x90, 0x10, 0x20, 0xd0, 0x10, 0x10, 0x70, 0xe0, 0x3e, 0x61, 0x86, 0x09, 0x3e, 0x4c, 0x48, 0xcc, 0xcf, 0x90, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xe9, 0xc9, 0x92, 0x64, 0x49, 0x32, 0x24, 0x38, 0x2b, 0x44, 0x02, 0x03, 0x02, 0x13, 0x0f, 0x10, 0x08, 0x10, 0x08, 0x1f, 0xff, 0x3e, 0x40, 0x40, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x41, 0x40, 0x40, 0x20, 0x20, 0x20, 0x30, 0x30, 0x50, 0x68, 0xcc, 0xc0, 0xc0, 0x40, 0x40, 0x40, 0xc0, 0xe0, 0x20, 0x18, 0x17, 0x20, 0x20, 0x20, 0x40, 0x40, 0x41, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x1f, 0x1f, 0x08, 0x00, 0x08, 0x1f, 0x1f, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0xb0, 0xd0, 0xb0, 0xd0, 0x10, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x30, 0x98, 0x68, 0xe8, 0xd8, 0x28, 0xe8, 0xe8, 0x88, 0x1f, 0xc1, 0x9e, 0x79, 0xf6, 0xc1, 0xb3, 0xb7, 0x33, 0x30, 0x6f, 0x18, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc1, 0x16, 0x36, 0x6d, 0x9b, 0xb6, 0xcd, 0xdb, 0xc7, 0xd4, 0xbb, 0xfd, 0xfc, 0xfd, 0xec, 0xf0, 0xef, 0xf7, 0xef, 0xf7, 0xe0, 0x00, 0xc1, 0xbf, 0xa1, 0x60, 0x40, 0xc0, 0x80, 0x00, 0x7f, 0xc1, 0xbe, 0xbf, 0xbf, 0xdf, 0x5f, 0x5f, 0x4f, 0xcf, 0xaf, 0x97, 0x33, 0x3f, 0x3f, 0xbf, 0xbf, 0xbf, 0x3f, 0x1f, 0xdf, 0x67, 0x68, 0x5f, 0x5f, 0xdf, 0xbf, 0xbf, 0xbe, 0xc1, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x37, 0x20, 0x20, 0x37, 0x1d, 0x37, 0x20, 0x20, 0x37, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//GROUNDHOG
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0x68, 0x48, 0x10, 0x08, 0xc8, 0x88, 0x88, 0x84, 0x02, 0x04, 0x02, 0x84, 0x88, 0xc8, 0xf8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0xa0, 0xb0, 0x90, 0x1c, 0x67, 0xc3, 0x40, 0x80, 0x74, 0x88, 0x0b, 0x12, 0x13, 0x14, 0x72, 0x52, 0x77, 0x1e, 0x13, 0xc8, 0x79, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x1e, 0x21, 0x2a, 0x2a, 0xaa, 0xff, 0x09, 0x06, 0x00, 0x01, 0x01, 0x02, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x81, 0xff, 0xaa, 0xaa, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x90, 0xe1, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x60, 0x00, 0x00, 0x00, 0x02, 0x87, 0x48, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x18, 0x20, 0x70, 0x40, 0x72, 0x42, 0x3e, 0x21, 0x70, 0x42, 0x72, 0x42, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0c, 0xf4, 0x94, 0xb4, 0xec, 0xf4, 0x34, 0x74, 0x76, 0x7b, 0xfd, 0xfb, 0xfd, 0x7b, 0x76, 0x34, 0x04, 0x8c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0xb0, 0xd0, 0x58, 0x48, 0x6f, 0xe3, 0x98, 0x3c, 0xbf, 0x7f, 0x8b, 0x77, 0xf4, 0xed, 0xec, 0xeb, 0x8d, 0xad, 0x88, 0xe1, 0xec, 0x37, 0x86, 0xe1, 0x3f, 0x00, 0x00, 0x00, 0x1f, 0x30, 0x2f, 0x61, 0x5e, 0x55, 0xd5, 0x55, 0x00, 0xf6, 0xf9, 0xff, 0xfe, 0xfe, 0xfd, 0xfc, 0xfc, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0x7e, 0x00, 0x55, 0x55, 0x83, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0xf0, 0x6f, 0x1e, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0x63, 0x9f, 0xff, 0xff, 0xff, 0xfd, 0x78, 0xb7, 0xcd, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x38, 0x67, 0xdf, 0x8f, 0xbf, 0x8d, 0xbd, 0xc1, 0xde, 0x8f, 0xbd, 0x8d, 0xbd, 0xc1, 0x7e, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}
	},
	{
		//UNCLESAM
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x82, 0xfe, 0x82, 0xfe, 0x82, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x20, 0x20, 0xc0, 0x00, 0x76, 0x8e, 0x87, 0xc6, 0xb7, 0x0e, 0x17, 0x46, 0x77, 0xff, 0x8e, 0xf6, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x21, 0x2f, 0x14, 0x12, 0x09, 0x38, 0xc4, 0x03, 0x07, 0x1f, 0x7f, 0x7c, 0xbf, 0x7f, 0x13, 0x37, 0x21, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x81, 0x01, 0xff, 0x83, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x3f, 0xf0, 0xff, 0xef, 0xc8, 0x3f, 0xf8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		}, //BLACK
		{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0x01, 0x7d, 0x01, 0x7d, 0x01, 0x7d, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x10, 0xd0, 0xd0, 0x30, 0xff, 0x89, 0x71, 0x78, 0x39, 0x48, 0xf1, 0xe8, 0xb9, 0x88, 0x00, 0x71, 0x09, 0xdf, 0x10, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x40, 0x5e, 0x50, 0x6b, 0x2d, 0x76, 0xc7, 0x3b, 0xfc, 0xf8, 0xe0, 0x80, 0x83, 0x40, 0x80, 0xec, 0x48, 0x5e, 0x60, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x7e, 0xfe, 0x00, 0x7c, 0xfe, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x63, 0xc0, 0x0f, 0x00, 0x10, 0x37, 0xc0, 0x07, 0x8c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x02, 0x02, 0x02, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		} //WHITE
	},
};

#define NOISE_NEXT 130
#define NOISE_POINT 70
#define NOISE_MISS 300
#define NOISE_HIT 500
#define NOISE_RETREAT 130
#define NOISE_CLICK 400

#define SOUND_SHORT 100
#define SOUND_MED 150
#define SOUND_LONG 200

void sound(int pitch, long duration) {
	if(arduboy.audio.enabled()) {
		tunes.tone(pitch, duration);
	}
}

void continuestate(byte tostate) {
	if(arduboy.justPressed(A_BUTTON)) {
		sound(NOISE_CLICK, SOUND_SHORT);
		gamestate = tostate;
	}
}

void resetvariables() {
	playerselect = 1;
	gameovertimer = 70;
	h1 = 5;
	h2 = 5;
	p1 = 0;
	p2 = 0;
	p1s = 0;
	p2s = 0;
	players = 1;
	intro = 180;
	p1x = 22;
	p2x = 127 - 22;
	p1y = yoffset;
	p2y = yoffset;
	p1c = 0;
	p2c = 0;
	p1v = 0;
	p2v = 0;
}

void inogamesetup() {
	arduboy.begin();
	arduboy.setFrameRate(60);
	arduboy.initRandomSeed();
	arduboy.display();

	tunes.initChannel(PIN_SPEAKER_1);
	#ifndef AB_DEVKIT
		tunes.initChannel(PIN_SPEAKER_2);
	#else
		tunes.initChannel(PIN_SPEAKER_1);
		tunes.toneMutesScore(true);
	#endif

	arduboy.clear();
}

void inogameloop() {
  delay(0);
	if(!(arduboy.nextFrame())) {
		return;
	}

	arduboy.pollButtons();

	arduboy.clear();

	switch(gamestate) {
		case 0: //Credits Screen
			drawBitmap(8, 8, me, 48, 48, WHITE, NORMAL);
			arduboy.setCursor(75, 8);
			arduboy.print(F("Jonathan"));
			arduboy.setCursor(87, 18);
			arduboy.print(F("Holmes"));
			arduboy.setCursor(86, 38);
			arduboy.print(F("@crait"));
			arduboy.setCursor(68, 49);
			arduboy.print(F("crait.net"));
			continuestate(1);
			break;
		case 1: //Title Screen
			resetvariables();
			drawBitmap(24, 3, logo, 80, 40, WHITE, NORMAL);

			if(pointer < 2 && arduboy.justPressed(RIGHT_BUTTON)) {
				pointer += 1;
				sound(NOISE_NEXT, SOUND_SHORT);
			}
			if(pointer > 0 && arduboy.justPressed(LEFT_BUTTON)) {
				pointer -= 1;
				sound(NOISE_NEXT, SOUND_SHORT);
			}

			drawBitmap(10 + 41 * pointer, 46, select, 26, 16, WHITE, NORMAL);

			drawBitmap(13, 47, op, 22, 14, WHITE, NORMAL);
			drawBitmap(53, 47, tp, 22, 14, WHITE, NORMAL);

			drawBitmap(13, 47, opw, 22, 14, BLACK, NORMAL);
			drawBitmap(53, 47, tpw, 22, 14, BLACK, NORMAL);

			if(arduboy.audio.enabled()) {
				drawBitmap(94, 47, sw, 22, 14, BLACK, NORMAL);
				drawBitmap(94, 47, s, 22, 14, WHITE, NORMAL);
			} else {
				drawBitmap(94, 47, sow, 22, 14, BLACK, NORMAL);
				drawBitmap(94, 47, so, 22, 14, WHITE, NORMAL);
			}

			if(arduboy.justPressed(A_BUTTON)) {
				if(pointer == 0) {
					gamestate = 2;
					players = 1;
					pointer = 0;
				}
				if(pointer == 1) {
					gamestate = 2;
					players = 2;
					pointer = 0;
				}
				if(pointer == 2) {
					arduboy.audio.toggle();
					arduboy.audio.saveOnOff();
				}
				sound(NOISE_CLICK, SOUND_SHORT);
			}

			break;
		case 2: //Char Select		
			drawBitmap(96, 2, select, 26, 16, WHITE, NORMAL);
			if(playerselect == 1) {
				drawBitmap(98, 3, opw, 22, 14, BLACK, NORMAL);
				drawBitmap(98, 3, op, 22, 14, WHITE, NORMAL);
			} else {
				drawBitmap(98, 3, tpw, 22, 14, BLACK, NORMAL);
				drawBitmap(98, 3, tp, 22, 14, WHITE, NORMAL);
			}

			if(arduboy.justPressed(LEFT_BUTTON) && pointer > 0) {
				sound(NOISE_NEXT, SOUND_SHORT);
				pointer -= 1;
			}
			if(arduboy.justPressed(RIGHT_BUTTON) && pointer < 5) {
				sound(NOISE_NEXT, SOUND_SHORT);
				pointer += 1;
			}
			if(arduboy.justPressed(UP_BUTTON) && pointer > 2) {
				sound(NOISE_NEXT, SOUND_SHORT);
				pointer -= 3;
			}
			if(arduboy.justPressed(DOWN_BUTTON) && pointer < 3) {
				sound(NOISE_NEXT, SOUND_SHORT);
				pointer += 3;
			}

			point = 0;
			for(byte y = 0; y < 2; y++) {
				for(byte x = 0; x < 3; x++) {
					drawBitmap(2 + x * 30, 2 + y * 32, portrait[point], 28, 28, WHITE, NORMAL);
					if(point == pointer) {
						arduboy.drawRect(x * 30, y * 32, 32, 32, WHITE);
					} else {
						arduboy.drawRect(2 + x * 30, 2 + y * 32, 28, 28, BLACK);
						arduboy.drawRect(2 + x * 30 + 1, 2 + y * 32 + 1, 26, 26, BLACK);
					}
					point++;
				}
			}
			drawBitmap(94, 22, standing[pointer][BLACK], 30, 38, BLACK, NORMAL);
			drawBitmap(94, 22, standing[pointer][WHITE], 30, 38, WHITE, NORMAL);

			if(arduboy.justPressed(B_BUTTON)) {
				gamestate = 1;
				pointer = 0;
				sound(NOISE_RETREAT, SOUND_SHORT);
			}
			if(arduboy.justPressed(A_BUTTON)) {
				sound(NOISE_CLICK, SOUND_SHORT);
				if(players == 1) {
					p1 = pointer;
					p2 = random(0, 6);
					gamestate = 3;
				} else {
					if(playerselect == 1) {
						p1 = pointer;
						pointer = 0;
						playerselect = 2;
					} else {
						p2 = pointer;
						gamestate = 3;
					}
				}
			}
			break;
		case 3: //Game
		arduboy.setCursor(1, 0);
			for(byte x = 0; x < h1; x++) {
				arduboy.print(char(0x03));
			}

			for(byte x = 0; x < h2; x++) {
				arduboy.setCursor(122 - x * 6, 0);
				arduboy.print(char(0x03));
			}

			for(byte flake = 0; flake < 10; flake++) {
				snow[flake][0] -= ((flake < 4) + 2);
				if(snow[flake][0] > 200) {
					snow[flake][0] = random(30) + 129;
					snow[flake][1] = random(40);
				}
				arduboy.drawPixel(snow[flake][0], snow[flake][1], WHITE);
			}

			arduboy.drawLine(0, 42, 127, 42, WHITE);
		
			if(intro > 0) {
				switch(intro) {
					case 180:
						sound(NOISE_MISS, SOUND_SHORT);
						break;
					case 120:
						sound(NOISE_MISS, SOUND_SHORT);
						break;
					case 60:
						sound(NOISE_MISS, SOUND_SHORT);
						break;
					case 1:
						sound(NOISE_HIT, SOUND_LONG);
						break;
				}
				arduboy.setCursor(60, 25);
				if(intro > 120) {
					arduboy.print("3");
				} else if(intro > 60) {
					arduboy.print("2");
				} else {
					arduboy.print("1");
				}
				intro--;
			} else {
				if(arduboy.justPressed(DOWN_BUTTON) && p1s == STANDING && p1c == 0) {
					p1s = PUNCHING;
					p1c = stats[p1][0] + forward;
					sound(NOISE_MISS, SOUND_MED);
				}
				if(arduboy.justPressed(LEFT_BUTTON) && p1s == STANDING && p1c == 0) {
					p1s = JUMPING;
					p1c = stats[p1][1] + back;
					sound(NOISE_RETREAT, SOUND_MED);
				}
				if(((players == 2 && arduboy.justPressed(A_BUTTON)) || (players == 1 && random(25) == 1)) && p2s == STANDING && p2c == 0) {
					p2s = PUNCHING;
					p2c = stats[p2][0] + forward;
					sound(NOISE_MISS, SOUND_MED);
				}
				if(((players == 2 && arduboy.justPressed(B_BUTTON)) || (players == 1 && random(20) == 1)) && p2s == STANDING && p2c == 0) {
					p2s = JUMPING;
					p2c = stats[p2][1] + back;
					sound(NOISE_RETREAT, SOUND_MED);
				}
				
				if(p1s == JUMPING) {
					p1x -= 2;
					p1c -= 1;
					if((stats[p1][1] + back) - p1c < 5) {
						p1y -= 4;
					} else if(p1c < 5) {
						p1y += 4;
					}
				}
				
				if(p2s == JUMPING) {
					p2x += 2;
					p2c -= 1;
					if((stats[p2][1] + back) - p2c < 5) {
						p2y -= 4;
					} else if(p2c < 5) {
						p2y += 4;
					}
				}
				
				if(p1s == HURT) {
					p1x -= 1;
					p1c -= 1;
					if((stats[p1][1] + back) - p1c < 5) {
						p1y -= 4;
					}
					if(p1c < 5) {
						p1v = 0;
						p1y += 4;
					}
				}
				
				if(p2s == HURT) {
					p2x += 1;
					p2c -= 1;
					if((stats[p2][1] + back) - p2c < 5) {
						p2y -= 4;
					}
					if(p2c < 5) {
						p2v = 0;
						p2y += 4;
					}
				}

				if(p1x > 200) {
					p1x = 0;
				}
				if(p2x < 38) {
					p2x = 38;
				}

				if(p1y < 7) {
					p1y = 4;
				}
				if(p2y < 7) {
					p2y = 4;
				}
				
				if(p1s == PUNCHING) {
					p1x += 2;
				}
				
				if(p2s == PUNCHING) {
					p2x -= 2;
				}

				if(p1c > 0) {
					p1c--;
				}
				
				if(p2c > 0) {
					p2c--;
				}

				if(p1c <= 0) {
					if(p1s == PUNCHING) {
						p1s = STANDING;
						p1c = stats[p1][0];
					} else {
						p1v = 0;
						p1c = 0;
						p1s = STANDING;
						p1y = yoffset;
						if(h1 == 0) {
							gamestate = 4;
						}
					}
				}

				if(p2c <= 0) {
					if(p2s == PUNCHING) {
						p2s = STANDING;
						p2c = stats[p2][0];
					} else {
						p2v = 0;
						p2c = 0;
						p2s = STANDING;
						p2y = yoffset;
						if(h2 == 0) {
							gamestate = 4;
						}
					}
				}			
				
				byte p1h = false;
				byte p2h = false;

				if(p1x + 28 > p2x - 36) {
					if(p1s == PUNCHING && p2v == 0) {
						p2h = true;
					}
					if(p2s == PUNCHING && p1v == 0) {
						p1h = true;
					}
				}

				if(p1h) {
					sound(NOISE_HIT, SOUND_LONG);
					p1v = 1;
					h1 -= 1;
					p1s = HURT;
					p1c = stats[p1][1] + back;
				
					if(!p2h) {
						p2s = JUMPING;
						p2c = stats[p2][1] + back + blow;
					}
				}
				if(p2h) {
					sound(NOISE_HIT, SOUND_LONG);
					p2v = 1;
					h2 -= 1;
					p2s = HURT;
					p2c = stats[p2][1] + back;

					if(!p1h) {
						p1s = JUMPING;
						p1c = stats[p1][1] + back + blow;
					}
				}


				if(p1x >= 127 - 38) {
					p1x = 127 - 38;
				}
				if(p2x > 127) {
					p2x = 127;
				}
			}

			if(p1s == STANDING) {
				drawBitmap(p1x, p1y, standing[p1][BLACK], 30, 38, BLACK, NORMAL);
				drawBitmap(p1x, p1y, standing[p1][WHITE], 30, 38, WHITE, NORMAL);
			}
			if(p1s == PUNCHING) {
				drawBitmap(p1x, p1y, punching[p1][BLACK], 38, 39, BLACK, NORMAL);
				drawBitmap(p1x, p1y, punching[p1][WHITE], 38, 39, WHITE, NORMAL);
			}
			if(p1s == JUMPING) {
				drawBitmap(p1x, p1y, jumping[p1][BLACK], 31, 42, BLACK, NORMAL);
				drawBitmap(p1x, p1y, jumping[p1][WHITE], 31, 42, WHITE, NORMAL);
			}
			if(p1s == HURT) {
				drawBitmap(p1x, p1y, hurt[p1][BLACK], 31, 40, BLACK, NORMAL);
				drawBitmap(p1x, p1y, hurt[p1][WHITE], 31, 40, WHITE, NORMAL);
			}

			if(p2s == STANDING) {
				drawBitmap(p2x - 30, p2y, standing[p2][BLACK], 30, 38, BLACK, FLIP);
				drawBitmap(p2x - 30, p2y, standing[p2][WHITE], 30, 38, WHITE, FLIP);
			}
			if(p2s == PUNCHING) {
				drawBitmap(p2x - 38, p2y, punching[p2][BLACK], 38, 39, BLACK, FLIP);
				drawBitmap(p2x - 38, p2y, punching[p2][WHITE], 38, 39, WHITE, FLIP);
			}
			if(p2s == JUMPING) {
				drawBitmap(p2x - 31, p2y, jumping[p2][BLACK], 31, 42, BLACK, FLIP);
				drawBitmap(p2x - 31, p2y, jumping[p2][WHITE], 31, 42, WHITE, FLIP);
			}
			if(p2s == HURT) {
				drawBitmap(p2x - 31, p2y, hurt[p2][BLACK], 31, 40, BLACK, FLIP);
				drawBitmap(p2x - 31, p2y, hurt[p2][WHITE], 31, 40, WHITE, FLIP);
			}
			
			break;
		case 4: //Game Over
			if(h1 > h2) {
				drawBitmap(33, 14, winner, 62, 16, WHITE, NORMAL);
				drawBitmap(51, 29, select, 26, 16, WHITE, NORMAL);
					
				drawBitmap(53, 30, opw, 22, 14, BLACK, NORMAL);
				drawBitmap(53, 30, op, 22, 14, WHITE, NORMAL);
			} else if(h1 < h2) {
				drawBitmap(33, 14, winner, 62, 16, WHITE, NORMAL);
				drawBitmap(51, 29, select, 26, 16, WHITE, NORMAL);
				
				drawBitmap(53, 30, tpw, 22, 14, BLACK, NORMAL);
				drawBitmap(53, 30, tp, 22, 14, WHITE, NORMAL);
			} else {
				arduboy.setCursor(52, 25);
				arduboy.print(F("TIE!"));
			}

			if(gameovertimer > 0) {
				gameovertimer--;
			} else {
				continuestate(0);
				pointer = 0;
			}
			break;
	}

	if(casting) {
		Serial.write(arduboy.getBuffer(), 128 * 64 / 8);
	}
	arduboy.display();
}
void gameLogicLoop(void *)
{
  for (;;) {
    inogameloop(); 
    // ArduinoOTA.handle();
  }
}

void setup() {
  inogamesetup();
  xTaskCreatePinnedToCore(gameLogicLoop, "g", 4096, nullptr, 0, nullptr, 0);
}

void loop() {
	delay(60000);
}
